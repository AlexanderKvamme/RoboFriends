{"version":3,"sources":["Components/Scroll.js","Components/CardList.js","Components/SearchBox.js","Components/ErrorBoundry.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Scroll","props","style","overflowY","border","height","children","CardList","robots","map","user","i","Error","SearchBox","searchChange","className","type","placeholder","onChange","ErrorBoundry","state","hasError","this","error","info","Component","App","onSearchChange","event","setState","searchfield","target","value","fetch","then","response","json","users","length","filteredRobots","filter","name","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAUeA,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACKJ,EAAMK,YCiBJC,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZ,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACF,MAAM,IAAIC,MAAM,cCOrCC,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKC,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCgBXK,E,kDAtBX,WAAYlB,GAAQ,IAAD,8BACf,cAAMA,IACDmB,MAAQ,CACTC,UAAU,GAHC,E,0CAOnB,WACI,OAAIC,KAAKF,MAAMC,SAEP,0DAIDC,KAAKrB,MAAMK,W,+BAGtB,SAAkBiB,EAAOC,GACrBF,KAAKF,MAAM,CAAEC,UAAU,Q,GAnBJI,aC6CZC,E,kDAxCX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb1C,EAAKZ,MAAQ,CACTZ,OAAQ,GACRsB,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAAErB,OAAQ6B,S,oBAO3C,WAAU,IAAD,OACL,GAAiC,IAA7Bf,KAAKF,MAAMZ,OAAO8B,OACnB,OAAO,yCAEV,IAAMC,EAAiBjB,KAAKF,MAAMZ,OAAOgC,QAAO,SAAAhC,GAC5C,OAAOA,EAAOiC,KAAKC,cAAcC,SAAS,EAAKvB,MAAMU,YAAYY,kBAGrE,OACI,sBAAK3B,UAAU,KAAf,UACI,qDACA,cAAC,EAAD,CAAWD,aAAcQ,KAAKK,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUnB,OAAQ+B,e,GAjCxBd,aCMHmB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,Q,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c9db41bd.chunk.js","sourcesContent":["import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{ overflowY: 'scroll', border: '1px solid black', height: '500px', }}>\n            {props.children}\n        </div>\n    )\n};\n\nexport default Scroll;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n        return (\n            <div>\n                {\n                    robots.map((user, i) => {\n                        if (true) { throw new Error(\"swag\")}\n                        return <Card \n                            key={i} \n                            id={robots[i].id} \n                            name={robots[i].name} \n                            email={robots[i].email}\n                        />\n                    })\n                  }\n              </div>\n        ) \n    }\n\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchChange }) => {\n    return (\n        <div className=\"pa2\">\n            <input\n                className='pa3 ba b--green bg-lightest-blue'\n                type='search'\n                placeholder='search robots'\n                onChange={searchChange}\n            />\n        </div>\n    )\n}\n\nexport default SearchBox;","import React, { Component }Â from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <h1>Ooops. That is not good.</h1>\n            )\n        }\n\n        return this.props.children;\n    }\n\n    componentDidCatch(error, info) {\n        this.state({ hasError: true })\n    }\n}\n\nexport default ErrorBoundry;","import React, { Component } from 'react';\nimport Scroll from '../Components/Scroll';\nimport CardList from '../Components/CardList';\nimport SearchBox from '../Components/SearchBox';\nimport ErrorBoundry from '../Components/ErrorBoundry';\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response=> response.json())\n        .then(users => this.setState({ robots: users }))\n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value })\n    }\n\n    render() {\n        if (this.state.robots.length === 0) {\n           return <h1>Loading</h1>\n        }\n        const filteredRobots = this.state.robots.filter(robots => {\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n        })\n\n        return (\n            <div className='tc'>\n                <h1>Robot Friend Finder</h1>\n                <SearchBox searchChange={this.onSearchChange}/>\n                <Scroll>\n                    <ErrorBoundry>\n                        <CardList robots={filteredRobots}/>\n                    </ErrorBoundry>\n                </Scroll>\n            </div>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Containers/App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}